---
apiVersion: "v1"
kind: "List"
items:
- apiVersion: v1
  kind: Service
  metadata:
    name: mysqlorders
    labels:
      app: "orders-service"
  spec:
    ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      name: mysqlorders
- apiVersion: "extensions/v1beta1"
  kind: "Deployment"
  metadata:
    name: mysqlorders
    labels:
      app: "orders-service"
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: mysqlorders
    template:
      metadata:
        labels:
          name: mysqlorders
      spec:
        containers:
        - capabilities: {}
          env:
          - name: "MYSQL_USER"
            value: "ticket"
          - name: "MYSQL_PASSWORD"
            value: "monster"
          - name: "MYSQL_DATABASE"
            value: "ticketmonster"
          - name: "MYSQL_MASTER_USER"
            value: "replicator"
          - name: "MYSQL_MASTER_PASSWORD"
            value: "replpass"
          - name: "MYSQL_ROOT_PASSWORD"
            value: "admin"
          - name: "MYSQL_BINLOG_FORMAT"
            value: "ROW"
          image: docker.io/centos/mysql-56-centos7:latest
          imagePullPolicy: IfNotPresent
          command:
          - "run-mysqld-master"
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 3306
            timeoutSeconds: 1
          name: mysqlorders
          ports:
          - containerPort: 3306
            protocol: TCP
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: mysqlorders-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - emptyDir:
            medium: ''
          name: mysqlorders-data